'''
This file is autogenerated by autogen/opcodes.py
from http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html.
'''

from enum import Enum, auto


class _Enum(Enum):

    def _generate_next_value_(name, start, count, last_values):
        name = name.lower().replace('__', '/').replace('_', '-')
        return (name, count + 1,)


class Opcode(_Enum):

    	NOP = auto()
	MOVE = auto()
	MOVE__FROM16 = auto()
	MOVE__16 = auto()
	MOVE_WIDE = auto()
	MOVE_WIDE__FROM16 = auto()
	MOVE_WIDE__16 = auto()
	MOVE_OBJECT = auto()
	MOVE_OBJECT__FROM16 = auto()
	MOVE_OBJECT__16 = auto()
	MOVE_RESULT = auto()
	MOVE_RESULT_WIDE = auto()
	MOVE_RESULT_OBJECT = auto()
	MOVE_EXCEPTION = auto()
	RETURN_VOID = auto()
	RETURN = auto()
	RETURN_WIDE = auto()
	RETURN_OBJECT = auto()
	CONST__4 = auto()
	CONST__16 = auto()
	CONST = auto()
	CONST__HIGH16 = auto()
	CONST_WIDE__16 = auto()
	CONST_WIDE__32 = auto()
	CONST_WIDE = auto()
	CONST_WIDE__HIGH16 = auto()
	CONST_STRING = auto()
	CONST_STRING_JUMBO = auto()
	CONST_CLASS = auto()
	MONITOR_ENTER = auto()
	MONITOR_EXIT = auto()
	CHECK_CAST = auto()
	INSTANCE_OF = auto()
	ARRAY_LENGTH = auto()
	NEW_INSTANCE = auto()
	NEW_ARRAY = auto()
	FILLED_NEW_ARRAY = auto()
	FILLED_NEW_ARRAY_RANGE = auto()
	FILL_ARRAY_DATA = auto()
	THROW = auto()
	GOTO = auto()
	GOTO__16 = auto()
	GOTO__32 = auto()
	PACKED_SWITCH = auto()
	SPARSE_SWITCH = auto()
	CMPL_FLOAT = auto()
	CMPG_FLOAT = auto()
	CMPL_DOUBLE = auto()
	CMPG_DOUBLE = auto()
	CMP_LONG = auto()
	IF_EQ = auto()
	IF_NE = auto()
	IF_LT = auto()
	IF_GE = auto()
	IF_GT = auto()
	IF_LE = auto()
	IF_EQZ = auto()
	IF_NEZ = auto()
	IF_LTZ = auto()
	IF_GEZ = auto()
	IF_GTZ = auto()
	IF_LEZ = auto()
	UNUSED_3E = auto()
	UNUSED_3F = auto()
	UNUSED_40 = auto()
	UNUSED_41 = auto()
	UNUSED_42 = auto()
	UNUSED_43 = auto()
	AGET = auto()
	AGET_WIDE = auto()
	AGET_OBJECT = auto()
	AGET_BOOLEAN = auto()
	AGET_BYTE = auto()
	AGET_CHAR = auto()
	AGET_SHORT = auto()
	APUT = auto()
	APUT_WIDE = auto()
	APUT_OBJECT = auto()
	APUT_BOOLEAN = auto()
	APUT_BYTE = auto()
	APUT_CHAR = auto()
	APUT_SHORT = auto()
	IGET = auto()
	IGET_WIDE = auto()
	IGET_OBJECT = auto()
	IGET_BOOLEAN = auto()
	IGET_BYTE = auto()
	IGET_CHAR = auto()
	IGET_SHORT = auto()
	IPUT = auto()
	IPUT_WIDE = auto()
	IPUT_OBJECT = auto()
	IPUT_BOOLEAN = auto()
	IPUT_BYTE = auto()
	IPUT_CHAR = auto()
	IPUT_SHORT = auto()
	SGET = auto()
	SGET_WIDE = auto()
	SGET_OBJECT = auto()
	SGET_BOOLEAN = auto()
	SGET_BYTE = auto()
	SGET_CHAR = auto()
	SGET_SHORT = auto()
	SPUT = auto()
	SPUT_WIDE = auto()
	SPUT_OBJECT = auto()
	SPUT_BOOLEAN = auto()
	SPUT_BYTE = auto()
	SPUT_CHAR = auto()
	SPUT_SHORT = auto()
	INVOKE_VIRTUAL = auto()
	INVOKE_SUPER = auto()
	INVOKE_DIRECT = auto()
	INVOKE_STATIC = auto()
	INVOKE_INTERFACE = auto()
	UNUSED_73 = auto()
	INVOKE_VIRTUAL__RANGE = auto()
	INVOKE_SUPER__RANGE = auto()
	INVOKE_DIRECT__RANGE = auto()
	INVOKE_STATIC__RANGE = auto()
	INVOKE_INTERFACE_RANGE = auto()
	UNUSED_79 = auto()
	UNUSED_7A = auto()
	NEG_INT = auto()
	NOT_INT = auto()
	NEG_LONG = auto()
	NOT_LONG = auto()
	NEG_FLOAT = auto()
	NEG_DOUBLE = auto()
	INT_TO_LONG = auto()
	INT_TO_FLOAT = auto()
	INT_TO_DOUBLE = auto()
	LONG_TO_INT = auto()
	LONG_TO_FLOAT = auto()
	LONG_TO_DOUBLE = auto()
	FLOAT_TO_INT = auto()
	FLOAT_TO_LONG = auto()
	FLOAT_TO_DOUBLE = auto()
	DOUBLE_TO_INT = auto()
	DOUBLE_TO_LONG = auto()
	DOUBLE_TO_FLOAT = auto()
	INT_TO_BYTE = auto()
	INT_TO_CHAR = auto()
	INT_TO_SHORT = auto()
	ADD_INT = auto()
	SUB_INT = auto()
	MUL_INT = auto()
	DIV_INT = auto()
	REM_INT = auto()
	AND_INT = auto()
	OR_INT = auto()
	XOR_INT = auto()
	SHL_INT = auto()
	SHR_INT = auto()
	USHR_INT = auto()
	ADD_LONG = auto()
	SUB_LONG = auto()
	MUL_LONG = auto()
	DIV_LONG = auto()
	REM_LONG = auto()
	AND_LONG = auto()
	OR_LONG = auto()
	XOR_LONG = auto()
	SHL_LONG = auto()
	SHR_LONG = auto()
	USHR_LONG = auto()
	ADD_FLOAT = auto()
	SUB_FLOAT = auto()
	MUL_FLOAT = auto()
	DIV_FLOAT = auto()
	REM_FLOAT = auto()
	ADD_DOUBLE = auto()
	SUB_DOUBLE = auto()
	MUL_DOUBLE = auto()
	DIV_DOUBLE = auto()
	REM_DOUBLE = auto()
	ADD_INT__2ADDR = auto()
	SUB_INT__2ADDR = auto()
	MUL_INT__2ADDR = auto()
	DIV_INT__2ADDR = auto()
	REM_INT__2ADDR = auto()
	AND_INT__2ADDR = auto()
	OR_INT__2ADDR = auto()
	XOR_INT__2ADDR = auto()
	SHL_INT__2ADDR = auto()
	SHR_INT__2ADDR = auto()
	USHR_INT__2ADDR = auto()
	ADD_LONG__2ADDR = auto()
	SUB_LONG__2ADDR = auto()
	MUL_LONG__2ADDR = auto()
	DIV_LONG__2ADDR = auto()
	REM_LONG__2ADDR = auto()
	AND_LONG__2ADDR = auto()
	OR_LONG__2ADDR = auto()
	XOR_LONG__2ADDR = auto()
	SHL_LONG__2ADDR = auto()
	SHR_LONG__2ADDR = auto()
	USHR_LONG__2ADDR = auto()
	ADD_FLOAT__2ADDR = auto()
	SUB_FLOAT__2ADDR = auto()
	MUL_FLOAT__2ADDR = auto()
	DIV_FLOAT__2ADDR = auto()
	REM_FLOAT__2ADDR = auto()
	ADD_DOUBLE__2ADDR = auto()
	SUB_DOUBLE__2ADDR = auto()
	MUL_DOUBLE__2ADDR = auto()
	DIV_DOUBLE__2ADDR = auto()
	REM_DOUBLE__2ADDR = auto()
	ADD_INT__LIT16 = auto()
	SUB_INT__LIT16 = auto()
	MUL_INT__LIT16 = auto()
	DIV_INT__LIT16 = auto()
	REM_INT__LIT16 = auto()
	AND_INT__LIT16 = auto()
	OR_INT__LIT16 = auto()
	XOR_INT__LIT16 = auto()
	ADD_INT__LIT8 = auto()
	SUB_INT__LIT8 = auto()
	MUL_INT__LIT8 = auto()
	DIV_INT__LIT8 = auto()
	REM_INT__LIT8 = auto()
	AND_INT__LIT8 = auto()
	OR_INT__LIT8 = auto()
	XOR_INT__LIT8 = auto()
	SHL_INT__LIT8 = auto()
	SHR_INT__LIT8 = auto()
	USHR_INT__LIT8 = auto()
	UNUSED_E3 = auto()
	UNUSED_E4 = auto()
	UNUSED_E5 = auto()
	UNUSED_E6 = auto()
	UNUSED_E7 = auto()
	UNUSED_E8 = auto()
	UNUSED_E9 = auto()
	UNUSED_EA = auto()
	UNUSED_EB = auto()
	UNUSED_EC = auto()
	UNUSED_ED = auto()
	EXECUTE_INLINE = auto()
	UNUSED_EF = auto()
	INVOKE_DIRECT_EMPTY = auto()
	UNUSED_F1 = auto()
	IGET_QUICK = auto()
	IGET_WIDE_QUICK = auto()
	IGET_OBJECT_QUICK = auto()
	IPUT_QUICK = auto()
	IPUT_WIDE_QUICK = auto()
	IPUT_OBJECT_QUICK = auto()
	INVOKE_VIRTUAL_QUICK = auto()
	INVOKE_VIRTUAL_QUICK__RANGE = auto()
	INVOKE_SUPER_QUICK = auto()
	INVOKE_SUPER_QUICK__RANGE = auto()
	UNUSED_FC = auto()
	UNUSED_FD = auto()
	UNUSED_FE = auto()
	UNUSED_FF = auto()


    @property
        def lit(self):
            if self.name.startswith('UNUSED'):
                return None

            lit, _ = self.value
            return lit
